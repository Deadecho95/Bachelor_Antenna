/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
{
    CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    box1.setPosition(0, 0, 240, 320);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(28, 28, 28));

    title.setXY(77, 0);
    title.setColor(touchgfx::Color::getColorFrom24BitRGB(245, 239, 239));
    title.setLinespacing(0);
    title.setTypedText(TypedText(T_SINGLEUSEID1));

    line1.setPosition(63, 21, 115, 11);
    line1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(5, 5);
    line1.setEnd(113, 5);
    line1.setLineWidth(2);
    line1.setLineEndingStyle(Line::BUTT_CAP_ENDING);

    boxProgress1.setXY(53, 52);
    boxProgress1.setProgressIndicatorPosition(2, 2, 16, 180);
    boxProgress1.setRange(0, 100);
    boxProgress1.setDirection(AbstractDirectionProgress::UP);
    boxProgress1.setBackground(Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_90_DEGREES_ID));
    boxProgress1.setColor(touchgfx::Color::getColorFrom24BitRGB(113, 255, 0));
    boxProgress1.setValue(0);

    buttonPlus.setXY(147, 52);
    buttonPlus.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    buttonPlus.setLabelText(TypedText(T_SINGLEUSEID2));
    buttonPlus.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonPlus.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonPlus.setAction(buttonCallback);

    buttonMinus.setXY(147, 156);
    buttonMinus.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    buttonMinus.setLabelText(TypedText(T_SINGLEUSEID3));
    buttonMinus.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonMinus.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonMinus.setAction(buttonCallback);

    power.setXY(5, 253);
    power.setColor(touchgfx::Color::getColorFrom24BitRGB(245, 239, 239));
    power.setLinespacing(0);
    power.setTypedText(TypedText(T_SINGLEUSEID4));

    powerValue.setXY(80, 253);
    powerValue.setColor(touchgfx::Color::getColorFrom24BitRGB(245, 239, 239));
    powerValue.setLinespacing(0);
    Unicode::snprintf(powerValueBuffer, POWERVALUE_SIZE, "%s", TypedText(T_SINGLEUSEID8).getText());
    powerValue.setWildcard(powerValueBuffer);
    powerValue.resizeToCurrentText();
    powerValue.setTypedText(TypedText(T_SINGLEUSEID5));

    BallLabel.setXY(137, 253);
    BallLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(245, 239, 239));
    BallLabel.setLinespacing(0);
    BallLabel.setTypedText(TypedText(T_SINGLEUSEID6));

    ballNbr.setXY(207, 253);
    ballNbr.setColor(touchgfx::Color::getColorFrom24BitRGB(245, 239, 239));
    ballNbr.setLinespacing(0);
    Unicode::snprintf(ballNbrBuffer, BALLNBR_SIZE, "%s", TypedText(T_SINGLEUSEID9).getText());
    ballNbr.setWildcard(ballNbrBuffer);
    ballNbr.resizeToCurrentText();
    ballNbr.setTypedText(TypedText(T_SINGLEUSEID7));

    positionLabel.setXY(5, 284);
    positionLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(245, 239, 239));
    positionLabel.setLinespacing(0);
    positionLabel.setTypedText(TypedText(T_SINGLEUSEID10));

    positionValue.setXY(101, 284);
    positionValue.setColor(touchgfx::Color::getColorFrom24BitRGB(245, 239, 239));
    positionValue.setLinespacing(0);
    Unicode::snprintf(positionValueBuffer, POSITIONVALUE_SIZE, "%s", TypedText(T_SINGLEUSEID12).getText());
    positionValue.setWildcard(positionValueBuffer);
    positionValue.resizeToCurrentText();
    positionValue.setTypedText(TypedText(T_SINGLEUSEID11));

    add(box1);
    add(title);
    add(line1);
    add(boxProgress1);
    add(buttonPlus);
    add(buttonMinus);
    add(power);
    add(powerValue);
    add(BallLabel);
    add(ballNbr);
    add(positionLabel);
    add(positionValue);
}

void MainViewBase::setupScreen()
{

}

//Handles when a key is pressed
void MainViewBase::handleKeyEvent(uint8_t key)
{
    if(2 == key)
    {
        //Interaction4
        //When hardware button 2 clicked change screen to Menu
        //Go to Menu with no screen transition
        application().gotoMenuScreenNoTransition();
    }
}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonPlus)
    {
        //Interaction1
        //When buttonPlus clicked call virtual function
        //Call btnPlusPressed
        btnPlusPressed();
    }
    else if (&src == &buttonMinus)
    {
        //Interaction2
        //When buttonMinus clicked call virtual function
        //Call btnMinusPressed
        btnMinusPressed();
    }
}
