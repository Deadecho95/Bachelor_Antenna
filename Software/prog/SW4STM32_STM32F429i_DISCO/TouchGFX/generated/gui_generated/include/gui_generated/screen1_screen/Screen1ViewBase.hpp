/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1_VIEW_BASE_HPP
#define SCREEN1_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}

    virtual void setupScreen();

    /*
     * Custom Action Handlers
     */
    virtual void btnPlusPressed()
    {
        // Override and implement this function in Screen1View
    }

    virtual void btnMinusPressed()
    {
        // Override and implement this function in Screen1View
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::TextArea title;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::BoxProgress boxProgress1;
    touchgfx::ButtonWithLabel buttonPlus;
    touchgfx::ButtonWithLabel buttonMinus;
    touchgfx::TextArea power;
    touchgfx::TextAreaWithOneWildcard powerValue;
    touchgfx::TextArea BallLabel;
    touchgfx::TextAreaWithOneWildcard ballNbr;

    /*
     * Wildcard Buffers
     */
    static const uint16_t POWERVALUE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar powerValueBuffer[POWERVALUE_SIZE];
    static const uint16_t BALLNBR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar ballNbrBuffer[BALLNBR_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // SCREEN1_VIEW_BASE_HPP
